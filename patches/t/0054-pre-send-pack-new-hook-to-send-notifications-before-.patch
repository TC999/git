From 49e9f3716811c544f2ec98b9b603cd8669ae64b6 Mon Sep 17 00:00:00 2001
From: Xu Ziyang <yunhuai.xzy@alibaba-inc.com>
Date: Mon, 18 Oct 2021 17:16:16 +0800
Subject: [PATCH 54/56] pre-send-pack: new hook to send notifications before
 sending pack

In order to send notifications when a user is cloning the repository,
add a new hook "pre-send-pack" before sending pack to user.

This hook is invoked just before starting creating the packfile.

Call "send_sideband()" in "run_pre_send_pack_hook()" directly, so we
don't need to allocate large buffers as arguments for it.

All output from stdout and stderr of the hook will be directed to client
using sideband. To make it simpler, we use:

    proc.stdout_to_stderr = 1;

This hook takes several arguments, which may variant in future versions
of git. So the implementation of the hook must tolerate different
arugments or even typos in arguments. E.g.:

    pre-send-pack --have=<NUM>   \
                  --filter=<NUM> \
                  --depth=<NUM>

Reviewed-by: Jiang Xin <zhiyou.jx@alibaba-inc.com>
Signed-off-by: Jiang Xin <zhiyou.jx@alibaba-inc.com>
Signed-off-by: Xu Ziyang <yunhuai.xzy@alibaba-inc.com>
Signed-off-by: Jiang Xin <zhiyou.jx@alibaba-inc.com>
---
 upload-pack.c | 41 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

diff --git a/upload-pack.c b/upload-pack.c
index 3a851b3606..14e0899818 100644
--- a/upload-pack.c
+++ b/upload-pack.c
@@ -14,6 +14,7 @@
 #include "list-objects-filter.h"
 #include "list-objects-filter-options.h"
 #include "run-command.h"
+#include "hook.h"
 #include "connect.h"
 #include "sigchain.h"
 #include "version.h"
@@ -271,6 +272,43 @@ static int relay_pack_data(int pack_objects_out, struct output_state *os,
 	return readsz;
 }
 
+static int run_pre_send_pack_hook(struct upload_pack_data *pack_data)
+{
+
+	struct child_process proc = CHILD_PROCESS_INIT;
+	const char *hook;
+	char data[128];
+
+	hook = find_hook("pre-send-pack");
+	if (!hook)
+		return 0;
+
+	strvec_push(&proc.args, hook);
+	strvec_pushf(&proc.args, "--have=%d", pack_data->have_obj.nr);
+	strvec_pushf(&proc.args, "--filter=%" PRIuMAX, pack_data->filter_options.filter_spec.nr);
+	strvec_pushf(&proc.args, "--depth=%d", pack_data->depth);
+
+	proc.stdout_to_stderr = 1;
+	proc.no_stdin = 1;
+	proc.trace2_hook_name = "pre-send-pack";
+	proc.err = -1;
+
+	if (start_command(&proc))
+		error(_("run pre-send-pack hook failed"));
+
+	while (1) {
+		ssize_t sz;
+		sz = xread(proc.err, data, sizeof(data));
+		if (sz <= 0)
+			break;
+		send_sideband(1, 2, data, sz, pack_data->use_sideband);
+	}
+
+	close(proc.err);
+
+	return finish_command(&proc);
+}
+
 static void create_pack_file(struct upload_pack_data *pack_data,
 			     const struct string_list *uri_protocols)
 {
@@ -325,6 +363,9 @@ static void create_pack_file(struct upload_pack_data *pack_data,
 	pack_objects.err = -1;
 	pack_objects.clean_on_exit = 1;
 
+	/* Run pre-send-pack hook to show notifications. */
+	run_pre_send_pack_hook(pack_data);
+
 	if (start_command(&pack_objects))
 		die("git upload-pack: unable to fork git-pack-objects");
 
-- 
patchwork
