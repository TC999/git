From b246287d68a2754d57b85a77361eb16c1fd8a8c6 Mon Sep 17 00:00:00 2001
From: Jiang Xin <zhiyou.jx@alibaba-inc.com>
Date: Thu, 4 Aug 2022 14:07:22 +0800
Subject: [PATCH 73/73] refs-txn: call execute_commands_atomic for large
 refs-txn

If there are too many updates for refs, call "execute_commands_atomic()"
instead of "execute_commands_non_atomic()". So we will run refs-txn hook
once.

Signed-off-by: Jiang Xin <zhiyou.jx@alibaba-inc.com>
---
 builtin/receive-pack.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/builtin/receive-pack.c b/builtin/receive-pack.c
index 9aabffa1af..729ea7667b 100644
--- a/builtin/receive-pack.c
+++ b/builtin/receive-pack.c
@@ -1827,11 +1827,26 @@ static void warn_if_skipped_connectivity_check(struct command *commands,
 		BUG("connectivity check skipped???");
 }
 
+static void execute_commands_atomic(struct command *commands, struct shallow_info *si);
 static void execute_commands_non_atomic(struct command *commands,
 					struct shallow_info *si)
 {
 	struct command *cmd;
 	struct strbuf err = STRBUF_INIT;
+	int count = 0;
+	int max_non_atomic_cmd = 100;
+
+	/* Add the following fallback code here,  not in execute_commands(),
+	 * because it will conflict with other patches.
+	 */
+	for (cmd = commands; cmd; cmd = cmd->next, count++);
+	if (count > max_non_atomic_cmd) {
+		rp_warning("too many references (%d > %d) to update, fallback to atomic push",
+				count,
+				max_non_atomic_cmd);
+		execute_commands_atomic(commands, si);
+		return;
+	}
 
 	for (cmd = commands; cmd; cmd = cmd->next) {
 		if (!should_process_cmd(cmd) || cmd->run_proc_receive)
-- 
patchwork
